# _____________________________________________________________________________
# Created By: Nguyen Huu Kim - Kimnh3
# Created Date: Mar 12, 2021 2:42pm GMT+0700
# Project: AkaOCR core
# _____________________________________________________________________________

# Define jobs for pipeline in CI-CD of the new OCR
# _____________________________________________________________________________

stages:
  - build
  - train
  - test

.requires-trigger-mount-data-commit-message:
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^trigger mount/

.requires-trigger-build-commit-message:
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^trigger build/

.requires-trigger-train-detec-commit-message:
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^trigger train detec/

.requires-trigger-train-recog-commit-message:
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^trigger train recog/

.requires-trigger-merge-commit-message:
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^trigger merge/ #test before merge

mount-nas2server:
  extends:
    - .requires-trigger-mount-data-commit-message
  tags:
    - docker
    - shell
  script:
      #mount data from NAS to 54 (user bacnv6); just mount once
      #data test
    - sudo mount -t cifs -o username=coeteam,password=Qai@2021,dir_mode=0777,file_mode=0777 '\\10.134.181.67\qai_storage\Synthtext_output\DATA_PROJECT\' /home/bacnv6/runner_data_test/
      #saved model
    - sudo mount -t cifs -o username=coeteam,password=Qai@2021,dir_mode=0777,file_mode=0777 '\\10.134.181.67\QAI_STORAGE\Trained_models\' /home/bacnv6/runner_model_test/

build-image:
  extends:
    - .requires-trigger-build-commit-message
  stage: build
  tags:
    - docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    # configure and run kaniko (ecr login creds come from env vars)
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/akaocr/Dockerfile --destination $CI_REGISTRY_IMAGE:${DOCKER_TAG} #--verbosity=debug

.authen-git-repo:
  script:
    #remove when included in build stage
    - apt-get update && \
        apt-get upgrade -y && \
        apt-get install -y git

    - mkdir -p ~/.ssh
    - echo "$SSH_PUB_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - ls ~/.ssh
    - chmod 600 ~/.ssh/id_rsa
    - cat ~/.ssh/id_rsa
    # - ssh-keyscan  -t rsa -p 2022 git3.fsoft.com.vn  >> ~/.ssh/known_hosts
    #2. Update (ssh) remote git3 repo, email, user
    - git remote set-url origin ssh://git@gitlab.com:cuongvt/ocr-components.git
    - git config --global user.email "huukim98@gmail.com"
    - git config --global user.name "huukim911"


train-detec-docker:
  extends:
    - .authen-git-repo
  #  - .requires-trigger-training-commit-message
  stage: train
  tags:
    - docker
  image: $CI_REGISTRY_IMAGE:${DOCKER_TAG}
  script:
    - pwd
    - ls
    - echo $CI_JOB_STAGE
    - cd akaocr/tools
    - export exit_code=0 #success by default
    - export result=""
    - nvidia-smi
        #mount data from NAS to 54 (user bacnv6)
        #data test
    - mount -t cifs -o username=coeteam,password=Qai@2021,dir_mode=0777,file_mode=0777 //10.134.181.67/qai_storage/Synthtext_output/DATA_PROJECT/ /builds/cuongvt/ocr-components/runner_data_test/
      #saved model
    - mount -t cifs -o username=coeteam,password=Qai@2021,dir_mode=0777,file_mode=0777 //10.134.181.67/QAI_STORAGE/Trained_models/ /builds/cuongvt/ocr-components/runner_model_test/
    - echo $CI_COMMIT_MESSAGE
    - export data_args=$(echo $CI_COMMIT_MESSAGE | grep -o -E '\--.+') #extract data arguments from commit; for ex: $CI_COMMIT_MESSAGE = "Trigger train detec: --data_detec="/home/bacnv6/runner_data_test/Kleentex/Detec/train" --data_test_detec="/home/bacnv6/runner_data_test/Kleentex/ST/ST_YAMATO_BLACK" "
    - echo $data_args
    - python train_detec.py $data_args || export exit_code=1
    - unmount /builds/cuongvt/ocr-components/runner_data_test/
    - unmount /builds/cuongvt/ocr-components/runner_model_test/
    - >
      if [ ${exit_code} -ne 0 ]; then
        export result="failed";
      else
        export result="passed";
      fi
    - echo $result
    - anybadge --label="train detec" --value=${result} --file=/akaocr/cicd/artifacts/badge_train_detec.svg passed=green failed=red
    - >
      if [ ${exit_code} -ne 0 ]; then
        exit 1;
      fi
    - git status
    - git add /akaocr/cicd/artifacts/badge_train_detec.svg
    - git commit -m "CI-COMMIT:($CI_COMMIT_MESSAGE)"
    - branch=$(git rev-parse --short HEAD)
    - echo $branch
    - git push origin HEAD:${CI_COMMIT_REF_NAME}
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^trigger train detec/
  allow_failure:
    exit_codes: 137



## test stage for merge process

test-model:
  extends:
    - .requires-trigger-merge-commit-message
  stage: test
  tags:
    - shell
  script:
    #    - export CUDA_VISIBLE_DEVICES=1 #in case 1st gpu full (2 gpus)
    - echo $CI_JOB_STAGE
    # - conda env create -f jobs/environment.yml -q #config new env to create if not exist, when use docker
    - conda activate akaocr #activate existed env; create a new env when use Docker
    - cd akaocr #cd to source
    - pip install -r requirements.txt #install for the 1st time only
    - pip install torch==1.8.0+cu111 torchvision==0.9.0+cu111 torchaudio===0.8.0 -f https://download.pytorch.org/whl/torch_stable.html
    - pip install anybadge
    - cd test
    - export exit_code=0 #success by default
    - export result=""
    - python models_test.py --config_recog "../data/attention_resnet_base_v1.yaml"  || export exit_code=1
    - echo $exit_code
    - >
      if [ ${exit_code} -ne 0 ]; then
        export result="failed";
      else
        export result="passed";
      fi
    - echo $result
    - anybadge --label="test model" --value=${result} --file=badge_test_model.svg passed=green failed=red #create badge for job
    - >
      if [ ${exit_code} -ne 0 ]; then
        exit 1;
      fi
  artifacts:
    paths:
      - akaocr/test/badge_test_model.svg #artifact, path as cd when the badge was created
    when: always #upload on both success and fail job
  allow_failure:
    exit_codes: 137 #a number !=1 to make the job failed if it actually fail

test-config:
  extends:
    - .requires-trigger-merge-commit-message
  stage: test
  tags:
    - shell
  script:
    - echo $CI_JOB_STAGE
    - conda activate akaocr
    - cd akaocr
    - cd test
    - export exit_code=0 #success by default
    - export result=""
    - python config_test.py || export exit_code=1
    - echo $exit_code
    - >
      if [ ${exit_code} -ne 0 ]; then
        export result="failed";
      else
        export result="passed";
      fi
    - echo $result
    - anybadge --label="test config" --value=${result} --file=badge_test_config.svg passed=green failed=red
    - >
      if [ ${exit_code} -ne 0 ]; then
        exit 1;
      fi
  artifacts:
    paths:
      - akaocr/test/badge_test_config.svg
    when: always
  allow_failure:
    exit_codes: 137

test-dataloader:
  extends:
    - .requires-trigger-merge-commit-message
  stage: test
  tags:
    - shell
  script:
    - echo $CI_JOB_STAGE
    - conda activate akaocr
    - cd akaocr
    - cd test
    - export exit_code=0 #success by default
    - export result=""
    - python test_dataloader.py --data_recog $DATA_RECOG --data_detec $DATA_DETEC || export exit_code=1
    - echo $exit_code
    - >
      if [ ${exit_code} -ne 0 ]; then
        export result="failed";
      else
        export result="passed";
      fi
    - echo $result
    - anybadge --label="test dataloader" --value=${result} --file=badge_test_dataloader.svg passed=green failed=red
    - >
      if [ ${exit_code} -ne 0 ]; then
        exit 1;
      fi
  artifacts:
    paths:
      - akaocr/test/badge_test_dataloader.svg
    when: always
  allow_failure:
    exit_codes: 137

test-eval:
  extends:
    - .requires-trigger-merge-commit-message
  stage: test
  tags:
    - shell
  script:
    - echo $CI_JOB_STAGE
    - conda activate akaocr
    - cd akaocr
    - cd test
    - export exit_code=0 #success by default
    - export result=""
    - python evaluation_test.py --w_detec $W_DETEC --data_test_detec $DATA_TEST_DETEC --w_recog $W_RECOG --data_recog $DATA_RECOG || export exit_code=1
    - echo $exit_code
    - >
      if [ ${exit_code} -ne 0 ]; then
        export result="failed";
      else
        export result="passed";
      fi
    - echo $result
    - anybadge --label="test evaluation" --value=${result} --file=badge_test_evaluation.svg passed=green failed=red
    - >
      if [ ${exit_code} -ne 0 ]; then
        exit 1;
      fi
  artifacts:
    paths:
      - akaocr/test/badge_test_evaluation.svg
    when: always
  allow_failure:
    exit_codes: 137

test-train-loop:
  extends:
    - .requires-trigger-merge-commit-message
  stage: test
  tags:
    - shell
  script:
    - echo $CI_JOB_STAGE
    - conda activate akaocr
    - cd akaocr
    - cd test
    - export exit_code=0 #success by default
    - export result=""
    - nvidia-smi
    - python train_loop_test.py --test_train_type detec --config="../data/heatmap_1fpn_v1_ci_test.yaml" --data_detec $DATA_DETEC --data_test_detec $DATA_TEST_DETEC && python train_loop_test.py --test_train_type recog --config="../data/attention_resnet_base_v1_ci_test.yaml" --data_recog $DATA_RECOG || export exit_code=1
    - echo $exit_code
    - >
      if [ ${exit_code} -ne 0 ]; then
        export result="failed";
      else
        export result="passed";
      fi
    - echo $result
    - anybadge --label="test training loop" --value=${result} --file=badge_test_train_loop.svg passed=green failed=red
    - >
      if [ ${exit_code} -ne 0 ]; then
        exit 1;
      fi
  artifacts:
    paths:
      - akaocr/test/badge_test_train_loop.svg
    when: always
  allow_failure:
    exit_codes: 137


## train stage for training model experiment
  #Trigger train detec ex: commit -m "trigger train detec: --data_detec="/home/bacnv6/runner_data_test/Kleentex/Detec/train" --data_test_detec="/home/bacnv6/runner_data_test/Kleentex/ST""
  #Trigger train recog ex: commit -m "trigger train recog: --data_recog="/home/bacnv6/runner_data_test/Kleentex/Recog/train" --data_test_recog="/home/bacnv6/runner_data_test/Kleentex/Recog/train""

# train-detec:
#   extends:
#     - .requires-trigger-train-detec-commit-message
#   stage: train
#   tags:
#     - shell
#   script:
#     - echo $CI_JOB_STAGE
#     - conda activate akaocr
#     - cd akaocr
#     - cd tools
#     - export exit_code=0 #success by default
#     - export result=""
#     - nvidia-smi
#     - echo $CI_COMMIT_MESSAGE
#     - export data_args=$(echo $CI_COMMIT_MESSAGE | grep -o -E '\--.+') #extract data arguments from commit; for ex: $CI_COMMIT_MESSAGE = "Trigger train detec: --data_detec="/home/bacnv6/runner_data_test/Kleentex/Detec/train" --data_test_detec="/home/bacnv6/runner_data_test/Kleentex/ST/ST_YAMATO_BLACK" "
#     - echo $data_args
#     - python train_detec.py $data_args || export exit_code=1
#     - echo $exit_code
#     - >
#       if [ ${exit_code} -ne 0 ]; then
#         export result="failed";
#       else
#         export result="passed";
#       fi
#     - echo $result
#     - anybadge --label="train detec" --value=${result} --file=badge_train_detec.svg passed=green failed=red
#     - >
#       if [ ${exit_code} -ne 0 ]; then
#         exit 1;
#       fi
#   artifacts:
#     paths:
#       - akaocr/tools/badge_train_detec.svg
#     when: always
#   allow_failure:
#     exit_codes: 137


train-recog:
  extends:
    - .requires-trigger-train-recog-commit-message
  stage: train
  tags:
    - shell
  script:
    - echo $CI_JOB_STAGE
    - conda activate akaocr
    - cd akaocr
    - cd tools
    - export exit_code=0 #success by default
    - export result=""
    - nvidia-smi
    - export data_args=$(echo $CI_COMMIT_MESSAGE | grep -o -E '\--.+') #extract data arguments from commit; for ex: $CI_COMMIT_MESSAGE = "Trigger train recog: --data_recog="/home/bacnv6/runner_data_test/Kleentex/Recog/train" --data_test_recog="/home/bacnv6/runner_data_test/Kleentex/Recog/train""
    - python train_recog.py $data_args || export exit_code=1
    - echo $exit_code
    - >
      if [ ${exit_code} -ne 0 ]; then
        export result="failed";
      else
        export result="passed";
      fi
    - echo $result
    - anybadge --label="train recog" --value=${result} --file=badge_train_recog.svg passed=green failed=red
    - >
      if [ ${exit_code} -ne 0 ]; then
        exit 1;
      fi
  artifacts:
    paths:
      - akaocr/tools/badge_train_recog.svg
    when: always
  allow_failure:
    exit_codes: 137

