# .gitlab-ci.yml
stages: 
  - build_train_image
  - train
  - test

.requires-build-image-commit-message:
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Trigger building image/

.requires-trigger-training-commit-message:
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Trigger training

.requires-trigger-testing-commit-message:
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Trigger testing

test:
  extends:
    - .requires-build-image-commit-message
  stage: test
  tags:
    - dvc
  script:
    - conda activate akaocr
    - cd akaocr
    - pip install -r requirements.txt
    - cd test
    - python models_test.py


#### [Refer: old experiment CI steps] ####
# build_train_image:
#   extends:
#     - .requires-build-image-commit-message
#   stage: build_train_image
#   image:
#     name: ecpe4s/ubuntu18.04-spack
#   tags:
#     - docker
#     - dvc
#   script:
#     - pip3 install -r requirements.txt

# train:
#   extends:
#     - .requires-trigger-training-commit-message
#   stage: train
#   #1. Update base Docker image
#   image: ecpe4s/ubuntu18.04-spack:latest
#   before_script:
#     - mkdir -p ~/.ssh
#     - echo "$SSH" | tr -d '\r' > ~/.ssh/id_rsa
#     - ls ~/.ssh
#     - chmod 600 ~/.ssh/id_rsa
#     - cat ~/.ssh/id_rsa
#     - ssh-keyscan  -t rsa -p 2022 git3.fsoft.com.vn  >> ~/.ssh/known_hosts
#     #2. Update (ssh) remote git3 repo, email, user
#     - git remote set-url origin ssh://git@git3.fsoft.com.vn:2022/GROUP/DPS/rnd/cvlib.git
#     - git config --global user.email "kimnh3@fsoft.com.vn"
#     - git config --global user.name "kimnh3"
#   tags:
#     - docker
#     - dvc
#   script:
#     - pip install "dvc[ssh]"
#     - pip3 install -r requirements.txt
#     - dvc remote modify --local storage password $DVC_PASSWORD
#     - dvc pull data
#     - dvc pull model
#     #3. Update necessary scripts (train, eval, test...)
#     - python3 train.py
#     - dvc add model
#     - dvc commit -f
#     - dvc push
#     - git add .
#     - git status
#     - echo "$(cat ~/.ssh/known_hosts)"
#     - git commit -m "CI-COMMIT:($CI_COMMIT_MESSAGE)"
#     - branch=$(git rev-parse --short HEAD)
#     - echo $branch
#     - git push origin HEAD:${CI_COMMIT_REF_NAME}
